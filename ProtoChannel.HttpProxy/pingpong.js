//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

Ping = Class.create(ProtoMessage, {
    initialize: function ($super, values) {
        this.payload = null;

        $super(1, values);
    },

    serialize: function () {
        var message = {};

        message[1] = this.payload;

        return message;
    },

    deserialize: function (message) {
        this.payload = message[1];
    }
});

ProtoRegistry.registerType(Ping, 1);

Pong = Class.create(ProtoMessage, {
    initialize: function ($super, values) {
        this.payload = null;

        $super(2, values);
    },

    serialize: function () {
        var message = {};

        message[1] = this.payload;

        return message;
    },

    deserialize: function (message) {
        this.payload = message[1];
    }
});

ProtoRegistry.registerType(Pong, 2);

StreamRequest = Class.create(ProtoMessage, {
    initialize: function ($super, values) {
        $super(3, values);
    },

    serialize: function () {
        var message = {};

        return message;
    },

    deserialize: function (message) {
    }
});

ProtoRegistry.registerType(StreamRequest, 3);

StreamResponse = Class.create(ProtoMessage, {
    initialize: function ($super, values) {
        this.streamId = null;

        $super(4, values);
    },

    serialize: function () {
        var message = {};

        message[1] = this.streamId;

        return message;
    },

    deserialize: function (message) {
        this.streamId = message[1];
    }
});

ProtoRegistry.registerType(StreamResponse, 4);

OneWayPing = Class.create(ProtoMessage, {
    initialize: function ($super, values) {
        this.payload = null;

        $super(5, values);
    },

    serialize: function () {
        var message = {};

        message[1] = this.payload;

        return message;
    },

    deserialize: function (message) {
        this.payload = message[1];
    }
});

ProtoRegistry.registerType(OneWayPing, 5);

PingPongChannel = Class.create(ProtoChannel, {
    ping: function (message, callback) {
        if (!(message instanceof Ping))
            message = new Ping(message);

        this.sendMessage(message, callback);
    },

    oneWayPing: function (message) {
        if (!(message instanceof OneWayPing))
            message = new OneWayPing(message);

        this.postMessage(message);
    }
});
